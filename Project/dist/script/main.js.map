{"version":3,"sources":["../../script/main.js"],"names":["canvasPreview","document","getElementById","divPreview","divCodeGround","inventory","buttonsDiv","spritesDiv","buttonsDivHeight","canvasPreviewHeight","canvasRatio","canvasHeight","canvasWidth","horizontalBias","maxDockingReactionDistance","minDockingDistance","maxTrashBinReactionDistance","trashBinDistDestroy","dragging","creatorMode","mouseOffsetX","mouseOffsetY","blockOnFocus","trashBin","trashBinWidth","width","trashBinHeight","height","trashBinX","trashBinY","trashBinCenterX","trashBinCenterY","zIndex","staticShapesTopMargin","staticShapesLeftMargin","currentOffsetInInventory","startingPosOfTheBlockBeingDragged","currentPosOfTheBlockBeingDragged","endingPosOfTheBlockBeingDragged","positionOfCoddingGround","distToTrashBin","shortestDist","distance","nearestTail","offsetToTailX","offsetToTailY","myContainerPos","dockedParenPosition","programIsRunning","main_i","postionOfCreator","parentOfDocked","minOpacityForAll","maxOpacityForAll","ctx2D","getContext","uniqueID","startZIndex","elements","getElementsByTagName","i","length","parseInt","style","widthOfDock","startOfBumb","heightOfBumb","lengthOfBumb","startOfDock","titlesColor","minTopBarWidth","shapesWallsWidth","bigRadius","titleOffsetX","titleOffsetY","smallRadius","getSmalRadius","minInputfield","dockLineWidth","blocksColorTransitionStep","left","resize","window","addEventListener","clientWidth","top","innerHeight","clientHeight","getBoundingClientRect","allCodingBlocks","allKeyEvenListeners","allKeyEvenListenersPools","mergeBackToColor","rChannel","gChannel","bChannel","R","Math","round","toString","toUpperCase","G","B","substr","interpolateColors","colorObject","factor","interpolateValues","inRchannel","outRchannel","inGchannel","outGchannel","inBchannel","outBchannel","valueIn","valueOut","getDockingPathNumerical","startOfShapeX","startOfShapeY","commands","coords","getDockingPathReverseNum","getStringPathFromNumerical","numPathCommandObject","commandAsString","currentOffsetInCoord","commandIndex","lengthOf_C_coord","clampZeroOne","value","clampedValue","CreateShape","svg","colorRange","headed","tailed","titles","isDouble","isTriple","dynamicTopBarTupple","widhtSampler","heightSampler","topBarHeight","secondBarSamplers","thirdBarSamplers","sel","addressMe","pathTuple","offsetY","push","curveTo","lineTo","extractTuple","cloneIsTriple","lineToAndPush","curveToAndPushSampler","extractTupleAndPush","startX","startY","lineToX","lineToY","controlX","controlY","endX","endY","pathObject","stringFromNumPath","path","createElementNS","namespaceURI","appendChild","setAttribute","loopsColor","inColor","textEl","pathFeel","body","samplers","arguments","DynamicBarTripleBody","inputBoxNewWidth","inputBoxNewHeight","inputX","firstCavityHeight","secondCavityHeight","DynamicBarDoubleBody","DynamicBarBody","FixedTopBarTripleBody","FixedTopBarDoubleBody","Body","titleA","titleB","titleC","head","tail","tail1","tail2","pathsCollection","Head","OuternTail","ConcavityTailFirst","ConcavityTailSecond","redrawSVG","coddingBlock","updateDimensions","numericalPath","movePathPosition","tails","mouseUp","mouseMove","keyDown","keyUp","startProgram","stopProgram","programLoop","keyEventPool","requestAnimationFrame","e","keyCode","preventDefault","setKey","releaseKey","documentElement","cursor","mouseUpCoddingBlock","event","mouseMoveCoddingBlock","distance2D","point_1_X","point_1_Y","point_2_X","point_2_Y","sqrt","setMeOnTop","self","id","container","imgGirl","imgVader","girl","Sprite","vader","startBlock","StaticInventoryStartBlock","ifBlock","StaticInventoryIfBlock","ifElseStaticBlock","StaticInventoryIfElseBlock","foreverBlock","StaticInventoryForeverBlock","keyUpBlock","StaticInventoryKeyUpBlock","keyDownBlock","StaticInventoryKeyDownBlock","keyLeftBlock","StaticInventoryKeyLeftBlock","keyRightBlock","StaticInventoryKeyRightBlock","keyUpOnceBlock","StaticInventoryKeyUpOnceBlock","keyDownOnceBlock","StaticInventoryKeyDownOnceBlock","keyLeftOnceBlock","StaticInventoryKeyLeftOnceBlock","keyRightOnceBlock","StaticInventoryKeyRightOnceBlock","moveUpBlock","StaticInventoryStepUPBlock","moveDownBlock","StaticInventoryStepDownBlock","moveLeftBlock","StaticInventoryStepLeftBlock","moveRightBlock","StaticInventoryStepRightBlock"],"mappings":"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","file":"main.js","sourcesContent":["const canvasPreview = document.getElementById('previewCanvas');\r\nconst divPreview = document.getElementById('previewDiv');\r\nconst divCodeGround = document.getElementById('codeGround');\r\nconst inventory = document.getElementById('inventory');\r\nconst buttonsDiv = document.getElementById('upperButtonsDiv');\r\nconst spritesDiv = document.getElementById('previewSprites');\r\n\r\nlet buttonsDivHeight = 40;\r\nlet canvasPreviewHeight;\r\nlet canvasRatio = 3 / 4;\r\nlet canvasHeight, canvasWidth;\r\nlet horizontalBias = 0;\r\nlet maxDockingReactionDistance = 50;\r\nlet minDockingDistance = 10;\r\nlet maxTrashBinReactionDistance = 100;\r\nlet trashBinDistDestroy = 70;\r\nlet dragging = false;\r\nlet creatorMode = false;\r\nlet mouseOffsetX = 0;\r\nlet mouseOffsetY = 0;\r\nlet blockOnFocus = null;\r\nlet trashBin = document.getElementById('trashbin');\r\nlet trashBinWidth = trashBin.width;\r\nlet trashBinHeight = trashBin.height;\r\nlet trashBinX;\r\nlet trashBinY;\r\nlet trashBinCenterX;\r\nlet trashBinCenterY;\r\nlet zIndex;\r\nlet staticShapesTopMargin = 20;\r\nlet staticShapesLeftMargin = 20;\r\nlet currentOffsetInInventory = staticShapesTopMargin;\r\nlet startingPosOfTheBlockBeingDragged;\r\nlet currentPosOfTheBlockBeingDragged;\r\nlet endingPosOfTheBlockBeingDragged;\r\nlet positionOfCoddingGround;\r\nlet distToTrashBin;\r\nlet shortestDist;\r\nlet distance;\r\nlet nearestTail;\r\nlet offsetToTailX;\r\nlet offsetToTailY\r\nlet myContainerPos;\r\nlet dockedParenPosition;\r\nlet programIsRunning = false;\r\nlet main_i;\r\nlet postionOfCreator;\r\nlet parentOfDocked;\r\n\r\nlet minOpacityForAll = 0.2;\r\nlet maxOpacityForAll = 1;\r\n\r\nlet ctx2D = canvasPreview.getContext('2d');\r\n\r\nlet uniqueID = 0;\r\n\r\n// find the base zeta index of all\r\nlet startZIndex = 0;\r\n(function () {\r\n    let elements = document.getElementsByTagName(\"*\");\r\n\r\n    for (let i = 0; i < elements.length - 1; i++) {\r\n        if (parseInt(elements[i].style.zIndex) > startZIndex) {\r\n            startZIndex = parseInt(elements[i].style.zIndex);\r\n        }\r\n    }\r\n})();\r\n\r\nstartZIndex++;\r\n\r\n// design of the docking shape\r\nlet widthOfDock = 50;\r\nlet startOfBumb = 15;\r\nlet heightOfBumb = 5;\r\nlet lengthOfBumb = widthOfDock - startOfBumb * 2;\r\nlet startOfDock = 35;\r\n\r\n// design of the body shape\r\nlet titlesColor = '#d6d8a0';\r\nlet minTopBarWidth = 150;\r\nlet shapesWallsWidth = 25;\r\nlet bigRadius = 20;\r\nlet titleOffsetX = shapesWallsWidth;\r\nlet titleOffsetY = 18;\r\nlet smallRadius = getSmalRadius(shapesWallsWidth);\r\nlet minInputfield = shapesWallsWidth / (8/10);\r\n\r\nlet dockLineWidth = 2;\r\n\r\nlet blocksColorTransitionStep = 0.08;\r\n\r\ncanvasPreview.style.left = '0px';\r\n\r\nresize();\r\n\r\nwindow.addEventListener('resize', resize, false);\r\n\r\n// this is not trash, it will be used later for recalculating the radius of the resized topBar\r\nfunction getSmalRadius(shapesWallsWidth) {\r\n    return shapesWallsWidth / (25 / 10);\r\n}\r\n\r\nfunction resize() {\r\n    canvasWidth = divPreview.clientWidth + horizontalBias;\r\n    canvasHeight = canvasWidth * canvasRatio;\r\n    canvasPreview.width = canvasWidth;\r\n    canvasPreview.height = canvasHeight;\r\n\r\n    spritesDiv.style.top = canvasHeight + 200 + 'px';\r\n\r\n    canvasPreviewHeight = (window.innerHeight / 2 - canvasHeight / 2);\r\n    canvasPreview.style.top = canvasPreviewHeight + 'px';\r\n    buttonsDiv.style.top = (canvasPreviewHeight - buttonsDivHeight) + 'px';\r\n\r\n    trashBinX = divCodeGround.clientWidth - trashBinWidth;\r\n    trashBinY = divCodeGround.clientHeight - trashBinHeight;\r\n    trashBin.style.left = trashBinX + 'px'; //relative to container\r\n    trashBin.style.top = trashBinY + 'px';  //\r\n    trashBinCenterX = trashBinX + trashBinWidth / 2;\r\n    trashBinCenterY = trashBinY + trashBinHeight / 2;\r\n\r\n    positionOfCoddingGround = divCodeGround.getBoundingClientRect();\r\n}\r\n\r\nlet allCodingBlocks = [];       // please don't re-order this one! NEVER!!!\r\nlet allKeyEvenListeners = [];\r\nlet allKeyEvenListenersPools = [];\r\n\r\nfunction mergeBackToColor(rChannel, gChannel, bChannel) {\r\n    if (rChannel > 255) {\r\n        rChannel = 255;\r\n    } else if (rChannel < 0) {\r\n        rChannel = 0;\r\n    }\r\n    if (gChannel > 255) {\r\n        gChannel = 255;\r\n    } else if (gChannel < 0) {\r\n        gChannel = 0;\r\n    }\r\n    if (bChannel > 255) {\r\n        bChannel = 255;\r\n    } else if (bChannel < 0) {\r\n        bChannel = 0;\r\n    }\r\n\r\n    let R = '00' + Math.round(rChannel).toString(16).toUpperCase();\r\n    let G = '00' + Math.round(gChannel).toString(16).toUpperCase();\r\n    let B = '00' + Math.round(bChannel).toString(16).toUpperCase();\r\n\r\n    return R.substr(R.length - 2, 2) +\r\n           G.substr(G.length - 2, 2) +\r\n           B.substr(B.length - 2, 2);\r\n}\r\n\r\nfunction interpolateColors(colorObject, factor) {\r\n    return mergeBackToColor(interpolateValues(colorObject.inRchannel, colorObject.outRchannel, factor),\r\n                            interpolateValues(colorObject.inGchannel, colorObject.outGchannel, factor),\r\n                            interpolateValues(colorObject.inBchannel, colorObject.outBchannel, factor));\r\n}\r\n\r\nfunction interpolateValues(valueIn, valueOut, factor) {\r\n    return (valueOut - valueIn) * factor + valueIn;\r\n}\r\n\r\nfunction getDockingPathNumerical(startOfShapeX, startOfShapeY) {\r\n    return {\r\n        commands: ['L', 'C'],\r\n        coords:\r\n        [(startOfShapeX + startOfBumb), startOfShapeY,\r\n        (startOfShapeX + startOfBumb), startOfShapeY,\r\n        (startOfShapeX + startOfBumb + lengthOfBumb / 2), (startOfShapeY - heightOfBumb),\r\n        (startOfShapeX + startOfBumb + lengthOfBumb), startOfShapeY]\r\n    };\r\n}\r\n\r\nfunction getDockingPathReverseNum(startOfShapeX, startOfShapeY, commands, coords) {\r\n    return {\r\n        commands: ['L', 'C'],\r\n        coords:\r\n            [(startOfShapeX - startOfBumb), startOfShapeY,\r\n             (startOfShapeX - startOfBumb), startOfShapeY,\r\n             (startOfShapeX - startOfBumb - lengthOfBumb / 2), (startOfShapeY - heightOfBumb),\r\n             (startOfShapeX - startOfBumb - lengthOfBumb), startOfShapeY]\r\n    };\r\n}\r\n\r\nfunction getStringPathFromNumerical(numPathCommandObject) {\r\n    let commandAsString = '';\r\n    let currentOffsetInCoord = 0;\r\n    for (let commandIndex = 0; commandIndex < numPathCommandObject.commands.length; commandIndex++) {\r\n        commandAsString += numPathCommandObject.commands[commandIndex] + ' ';\r\n        switch(numPathCommandObject.commands[commandIndex]) {\r\n            case 'M':\r\n            case 'L':\r\n                commandAsString +=\r\n                    numPathCommandObject.coords[currentOffsetInCoord++] + ',' +\r\n                    numPathCommandObject.coords[currentOffsetInCoord++] + ' ';\r\n                break;\r\n            case 'C':\r\n                for (let lengthOf_C_coord = 0; lengthOf_C_coord < 5; lengthOf_C_coord++) {\r\n                    commandAsString +=\r\n                        numPathCommandObject.coords[currentOffsetInCoord++] + ',';\r\n                }\r\n                commandAsString += numPathCommandObject.coords[currentOffsetInCoord++] + ' ';\r\n                break;\r\n        }\r\n    }\r\n    return commandAsString;\r\n}\r\n\r\nfunction clampZeroOne(value) {\r\n    let clampedValue = value;\r\n    if (clampedValue > 1) {\r\n        clampedValue = 1;\r\n    } else if (clampedValue < 0) {\r\n        clampedValue = 0;\r\n    }\r\n    return clampedValue;\r\n}\r\n\r\nfunction CreateShape(svg, colorRange, headed, tailed, titles, isDouble, isTriple, dynamicTopBarTupple) {\r\n\r\n    let widhtSampler;\r\n    let heightSampler;\r\n    let topBarHeight;\r\n\r\n    let secondBarSamplers = [];\r\n    let thirdBarSamplers = [];\r\n\r\n    let sel = 0;\r\n    let addressMe = [secondBarSamplers, thirdBarSamplers];\r\n\r\n    // create the path object here\r\n\r\n    let pathTuple;\r\n    let coords = [];\r\n    let commands = ['M'];   // start each filled path with move-to-ABS-pos command\r\n\r\n    let offsetY = 0;\r\n    if (headed) {   // if headed, add that dock element on top\r\n        offsetY = heightOfBumb;\r\n        pathTuple = getDockingPathNumerical(startOfDock, offsetY);\r\n        for (let i = 0; i < pathTuple.coords.length; i++)\r\n            coords.push(pathTuple.coords[i]);\r\n        commands.push('C', 'L');\r\n    }\r\n    coords.push(minTopBarWidth - smallRadius, offsetY);\r\n\r\n    curveTo(minTopBarWidth - smallRadius, offsetY,   // top left corner of top bar\r\n            minTopBarWidth, offsetY,\r\n            minTopBarWidth, offsetY + smallRadius);\r\n    widhtSampler = coords.length - 2;\r\n    lineTo(minTopBarWidth, offsetY + shapesWallsWidth - smallRadius);\r\n    curveTo(minTopBarWidth, offsetY + shapesWallsWidth - smallRadius,\r\n            minTopBarWidth, offsetY + shapesWallsWidth,\r\n            minTopBarWidth - smallRadius, offsetY + shapesWallsWidth); // bottom left corner of top bar\r\n    topBarHeight = coords[coords.length - 1];\r\n\r\n    if (!isDouble && !isTriple) {   // if it is single bar line directly to the bottom right corner\r\n        // let test if tail needed first\r\n        if (tailed) {\r\n            extractTuple(startOfDock + widthOfDock, shapesWallsWidth + offsetY);\r\n        }\r\n        lineTo(smallRadius, offsetY + shapesWallsWidth);\r\n        heightSampler = coords.length - 1;\r\n\r\n        curveTo(smallRadius, offsetY + shapesWallsWidth, // bottom right corner of single top bar\r\n                0, offsetY + shapesWallsWidth,\r\n                0, offsetY + shapesWallsWidth - smallRadius);\r\n        lineTo(0, smallRadius);\r\n        curveTo(0, offsetY + smallRadius,\r\n                0, offsetY,\r\n                0 + smallRadius, offsetY);  // upper right corner of single top bar\r\n        commands.push('Z'); // close path and hopefully it will not explode\r\n    } else {\r\n        extractTuple(shapesWallsWidth + startOfDock + widthOfDock, shapesWallsWidth + offsetY, commands, coords);\r\n\r\n        let cloneIsTriple = isTriple;\r\n        let i = 0;\r\n        for (; sel < 2 ; i += 2, sel++) {\r\n            if (sel === 0) {\r\n                lineTo(shapesWallsWidth + smallRadius, offsetY + shapesWallsWidth * (1 + i), sel);\r\n                curveTo(shapesWallsWidth + smallRadius, offsetY + shapesWallsWidth * (1 + i),     // top internal corner of the first cavity\r\n                        shapesWallsWidth, offsetY + shapesWallsWidth * (1 + i),\r\n                        shapesWallsWidth, offsetY + shapesWallsWidth * (1 + i) + smallRadius, sel);\r\n            } else {\r\n                lineToAndPush(shapesWallsWidth + smallRadius, offsetY + shapesWallsWidth * (1 + i), 0);\r\n                curveToAndPushSampler(shapesWallsWidth + smallRadius, offsetY + shapesWallsWidth * (1 + i),     // top internal corner of the first cavity\r\n                                      shapesWallsWidth, offsetY + shapesWallsWidth * (1 + i),\r\n                                      shapesWallsWidth, offsetY + shapesWallsWidth * (1 + i) + smallRadius, 0);\r\n            }\r\n            lineToAndPush(shapesWallsWidth, offsetY + shapesWallsWidth * (2 + i) - smallRadius, sel);\r\n            curveToAndPushSampler(shapesWallsWidth, offsetY + shapesWallsWidth * (2 + i) - smallRadius, // bottom internal corner of the first cavity\r\n                                  shapesWallsWidth, offsetY + shapesWallsWidth * (2 + i),\r\n                                  shapesWallsWidth + smallRadius, offsetY + shapesWallsWidth * (2 + i), sel);\r\n            lineToAndPush(minTopBarWidth - smallRadius, offsetY + shapesWallsWidth * (2 + i), sel);\r\n            curveToAndPushSampler(minTopBarWidth - smallRadius, offsetY + shapesWallsWidth * (2 + i), // top left corner of the second bar\r\n                                  minTopBarWidth, offsetY + shapesWallsWidth * (2 + i),\r\n                                  minTopBarWidth, offsetY + shapesWallsWidth * (2 + i) + smallRadius, sel);\r\n            lineToAndPush(minTopBarWidth, offsetY + shapesWallsWidth * (3 + i) - smallRadius, sel);\r\n            curveToAndPushSampler(minTopBarWidth, offsetY + shapesWallsWidth * (3 + i) - smallRadius, // bottom left corner of the second bar\r\n                                  minTopBarWidth, offsetY + shapesWallsWidth * (3 + i),\r\n                                  minTopBarWidth - smallRadius, offsetY + shapesWallsWidth * (3 + i), sel);\r\n            if (!cloneIsTriple) {     // it needs a dock on the top of the second cavity wich is little but to the left\r\n                if (tailed) {\r\n                    extractTupleAndPush(startOfDock + widthOfDock, offsetY + shapesWallsWidth * (3 + i), sel);\r\n                }\r\n                break;\r\n            }\r\n            extractTupleAndPush(shapesWallsWidth + startOfDock + widthOfDock, offsetY + shapesWallsWidth * (3 + i), sel);\r\n            cloneIsTriple = false;\r\n        }\r\n\r\n        lineToAndPush(bigRadius, offsetY + shapesWallsWidth * (3 + i), sel);\r\n        heightSampler = coords.length - 1;\r\n        curveToAndPushSampler(bigRadius, offsetY + shapesWallsWidth * (3 + i), // bottom right corner of the whole shape\r\n                              0, offsetY + shapesWallsWidth * (3 + i),\r\n                              0, offsetY + shapesWallsWidth * (3 + i) - bigRadius, sel);\r\n        lineTo(0, offsetY + bigRadius);\r\n        curveTo(0, offsetY + bigRadius, // top right corner of the whole shape\r\n                0, offsetY,\r\n                bigRadius, offsetY);\r\n        commands.push('Z');\r\n    }\r\n\r\n    function extractTuple(startX, startY) {\r\n        pathTuple = getDockingPathReverseNum(startX, startY);\r\n        for (let i = 0; i < pathTuple.commands.length; i++)\r\n            commands.push(pathTuple.commands[i]);\r\n        for (let i = 0; i < pathTuple.coords.length; i += 2)\r\n            coords.push(pathTuple.coords[i], pathTuple.coords[i + 1]);\r\n    }\r\n\r\n    function extractTupleAndPush(startX, startY, sel) {\r\n        pathTuple = getDockingPathReverseNum(startX, startY);\r\n        for (let i = 0; i < pathTuple.commands.length; i++)\r\n            commands.push(pathTuple.commands[i]);\r\n        for (let i = 0; i < pathTuple.coords.length; i += 2) {\r\n            coords.push(pathTuple.coords[i], pathTuple.coords[i + 1]);\r\n            addressMe[sel].push(coords.length - 1);\r\n        }\r\n    }\r\n\r\n    function lineTo(lineToX, lineToY) {\r\n        commands.push('L');\r\n        coords.push(lineToX, lineToY);\r\n    }\r\n\r\n    function lineToAndPush(lineToX, lineToY, sel) {\r\n        commands.push('L');\r\n        coords.push(lineToX, lineToY);\r\n        addressMe[sel].push(coords.length - 1);\r\n    }\r\n\r\n    function curveTo(startX, startY, controlX, controlY, endX, endY) {\r\n        commands.push('C');\r\n        coords.push(startX, startY, controlX, controlY, endX, endY);\r\n    }\r\n\r\n    function curveToAndPushSampler(startX, startY, controlX, controlY, endX, endY, sel) {\r\n        commands.push('C');\r\n        coords.push(startX, startY, controlX, controlY, endX, endY);\r\n        addressMe[sel].push(coords.length - 5);\r\n        addressMe[sel].push(coords.length - 3);\r\n        addressMe[sel].push(coords.length - 1);\r\n    }\r\n\r\n    let pathObject = { commands, coords };\r\n\r\n    let stringFromNumPath = getStringPathFromNumerical(pathObject);\r\n\r\n    let path = document.createElementNS(svg.namespaceURI, 'path');\r\n    svg.appendChild(path);\r\n    path.setAttribute('stroke', 'none');\r\n    path.setAttribute('opacity', 1);\r\n    path.setAttribute('fill', loopsColor.inColor);\r\n\r\n    for (let i = 0; i < titles.length; i++) {\r\n        svg.appendChild(titles[i].textEl);\r\n    }\r\n\r\n    let pathFeel = document.createElementNS(svg.namespaceURI, 'path');\r\n    svg.appendChild(pathFeel);\r\n    pathFeel.setAttribute('id', uniqueID++);\r\n    pathFeel.setAttribute('stroke', 'none');\r\n    pathFeel.setAttribute('opacity', 0);\r\n    pathFeel.setAttribute('fill', '#000000');\r\n    pathFeel.setAttribute('class', 'codingblocktitle');\r\n    pathFeel.setAttribute('d', stringFromNumPath);\r\n\r\n    let body = null;\r\n    let samplers = { widhtSampler: widhtSampler, heightSampler: heightSampler };\r\n\r\n    if (arguments > 8) { // its top bar is resizeable\r\n        if (isTriple) {\r\n            body = new DynamicBarTripleBody(colorRange, path, pathFeel, pathObject, widhtSampler, heightSampler, dynamicTopBarTupple.inputBoxNewWidth, dynamicTopBarTupple.inputBoxNewHeight, dynamicTopBarTupple.inputX);\r\n            body.firstCavityHeight = shapesWallsWidth;\r\n            body.secondCavityHeight = shapesWallsWidth;\r\n        } else if (isDouble) {\r\n            body = new DynamicBarDoubleBody(colorRange, path, pathFeel, pathObject, widhtSampler, heightSampler, dynamicTopBarTupple.inputBoxNewWidth, dynamicTopBarTupple.inputBoxNewHeight, dynamicTopBarTupple.inputX);\r\n            body.firstCavityHeight = shapesWallsWidth;\r\n        } else {\r\n            body = new DynamicBarBody(colorRange, path, pathFeel, pathObject, widhtSampler, heightSampler, dynamicTopBarTupple.inputBoxNewWidth, dynamicTopBarTupple.inputBoxNewHeight, dynamicTopBarTupple.inputX);\r\n        }\r\n    } else {\r\n        if (isTriple) {\r\n            samplers.secondBarSamplers = secondBarSamplers;\r\n            samplers.thirdBarSamplers = thirdBarSamplers;\r\n            body = new FixedTopBarTripleBody(colorRange, path, pathFeel, pathObject, samplers, topBarHeight);\r\n            body.firstCavityHeight = shapesWallsWidth;\r\n            body.secondCavityHeight = shapesWallsWidth;\r\n        } else if (isDouble) {\r\n            samplers.secondBarSamplers = secondBarSamplers;\r\n            body = new FixedTopBarDoubleBody(colorRange, path, pathFeel, pathObject, samplers, topBarHeight);\r\n            body.firstCavityHeight = shapesWallsWidth;\r\n        } else {\r\n            body = new Body(colorRange, path, pathFeel, pathObject, samplers, topBarHeight);\r\n        }\r\n    }\r\n\r\n    let titleA = null;\r\n    let titleB = null;\r\n    let titleC = null;\r\n\r\n    let head = null;\r\n    let tail = null;\r\n    let tail1 = null;\r\n    let tail2 = null;\r\n\r\n    pathsCollection = {body: body};\r\n\r\n    if (headed) {\r\n        head = new Head(svg);\r\n        pathsCollection.head = head;\r\n    }\r\n\r\n    if (tailed) {\r\n        if (isTriple) {\r\n            tail = new OuternTail(svg, offsetY + shapesWallsWidth * 5);\r\n        } else if (isDouble) {\r\n            tail = new OuternTail(svg, offsetY + shapesWallsWidth * 3);\r\n        } else {\r\n            tail = new OuternTail(svg, offsetY + shapesWallsWidth);\r\n        }\r\n        pathsCollection.tail = tail;\r\n    }\r\n\r\n    if (isTriple) {\r\n        let tail1 = new ConcavityTailFirst(svg, offsetY + shapesWallsWidth);\r\n        let tail2 = new ConcavityTailSecond(svg, offsetY + shapesWallsWidth * 3);\r\n        pathsCollection.tail1 = tail1;\r\n        pathsCollection.tail2 = tail2;\r\n    } else if (isDouble) {\r\n        let tail1 = new ConcavityTailFirst(svg, offsetY + shapesWallsWidth);\r\n        pathsCollection.tail1 = tail1;\r\n    }\r\n\r\n    return pathsCollection;\r\n}\r\n\r\nfunction redrawSVG(coddingBlock) {\r\n    coddingBlock.body.updateDimensions();\r\n    coddingBlock.svg.setAttribute('height', coddingBlock.body.height + 2);\r\n    coddingBlock.svg.setAttribute('width', coddingBlock.body.width);\r\n    coddingBlock.body.path.setAttribute('d', getStringPathFromNumerical(coddingBlock.body.numericalPath));\r\n    coddingBlock.body.pathFeel.setAttribute('d', getStringPathFromNumerical(coddingBlock.body.numericalPath));\r\n    if (coddingBlock.head !== null)\r\n        coddingBlock.head.movePathPosition(coddingBlock.head.startOfShapeY);\r\n    for (let i = 0; i < coddingBlock.tails.length; i++)\r\n        coddingBlock.tails[i].movePathPosition(coddingBlock.tails[i].startOfShapeY);\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////\r\n//      COMMON EVENT LISTENERS\r\n//////////////////////////////////////////////////////////////////\r\n\r\nwindow.addEventListener(\"mouseup\", mouseUp);\r\nwindow.addEventListener(\"mousemove\", mouseMove);\r\nwindow.addEventListener(\"keydown\", keyDown);\r\nwindow.addEventListener(\"keyup\", keyUp);\r\n\r\ndocument.getElementById('startButton').addEventListener('mousedown', startProgram);\r\ndocument.getElementById('stopButton').addEventListener('mouseup', stopProgram);\r\n\r\nfunction startProgram() {\r\n    programIsRunning = true;\r\n    programLoop();\r\n}\r\n\r\nfunction programLoop() {\r\n    if (programIsRunning) {\r\n        for (main_i = 0; main_i < allKeyEvenListenersPools.length; main_i++)\r\n            allKeyEvenListenersPools[main_i].keyEventPool();\r\n        window.requestAnimationFrame(programLoop);\r\n    }\r\n}\r\n\r\nfunction stopProgram() {\r\n    programIsRunning = false;\r\n    // restore the state\r\n}\r\n\r\nfunction keyDown(e) {\r\n    if (e.keyCode !== 123 && e.keyCode !== 116) e.preventDefault();\r\n\r\n    if (programIsRunning) {\r\n        for (main_i = 0; main_i < allKeyEvenListeners.length; main_i++)\r\n            allKeyEvenListeners[main_i].setKey(e);\r\n    }\r\n}\r\n\r\nfunction keyUp(e) {\r\n    if (e.keyCode !== 123 && e.keyCode !== 116) e.preventDefault();\r\n\r\n    if (programIsRunning) {\r\n        for (main_i = 0; main_i < allKeyEvenListeners.length; main_i++)\r\n            allKeyEvenListeners[main_i].releaseKey(e);\r\n    }\r\n}\r\n\r\nfunction mouseUp() {\r\n    document.documentElement.style.cursor = 'default';  // needed!\r\n    if (dragging)\r\n        blockOnFocus.mouseUpCoddingBlock();\r\n}\r\n\r\nfunction mouseMove(event) {\r\n    if (dragging)\r\n        blockOnFocus.mouseMoveCoddingBlock(event);\r\n}\r\n\r\nfunction distance2D(point_1_X, point_1_Y, point_2_X, point_2_Y) {\r\n    return Math.sqrt((point_1_X - point_2_X) *\r\n                     (point_1_X - point_2_X) + (point_1_Y - point_2_Y) *\r\n                                               (point_1_Y - point_2_Y));\r\n}\r\n\r\nfunction setMeOnTop(self) {\r\n    zIndex = startZIndex + allCodingBlocks.length + 5; // angel number\r\n    for (let i = 0; i < allCodingBlocks.length; i++) {\r\n        if (self.id !== i) {\r\n            allCodingBlocks[i].container.style.zIndex = startZIndex;\r\n        }\r\n    }\r\n\r\n    if (creatorMode) {\r\n        inventory.style.zIndex = zIndex;\r\n        self.container.style.zIndex = zIndex + 1;\r\n        divPreview.style.zIndex = zIndex + 2 ;\r\n        canvasPreview.style.zIndex = zIndex + 3;\r\n    } else {\r\n        self.container.style.zIndex = zIndex;\r\n        divPreview.style.zIndex = zIndex + 1;\r\n        canvasPreview.style.zIndex = zIndex + 2;\r\n        inventory.style.zIndex = zIndex + 3;\r\n    }\r\n    buttonsDiv.style.zIndex = zIndex + 4;\r\n    spritesDiv.style.zIndex = zIndex + 4;\r\n}\r\nlet imgGirl = document.getElementById('girl');\r\nlet imgVader = document.getElementById('vader');\r\nlet girl = new Sprite(imgGirl, 100, 100);\r\nlet vader = new Sprite(imgVader, 120, 100);\r\n\r\n// populate the inventory table\r\nlet startBlock = new StaticInventoryStartBlock();\r\nlet ifBlock = new StaticInventoryIfBlock();\r\nlet ifElseStaticBlock = new StaticInventoryIfElseBlock();\r\nlet foreverBlock = new StaticInventoryForeverBlock();\r\n\r\nlet keyUpBlock = new StaticInventoryKeyUpBlock();\r\nlet keyDownBlock = new StaticInventoryKeyDownBlock();\r\nlet keyLeftBlock = new StaticInventoryKeyLeftBlock();\r\nlet keyRightBlock = new StaticInventoryKeyRightBlock();\r\n\r\nlet keyUpOnceBlock = new StaticInventoryKeyUpOnceBlock();\r\nlet keyDownOnceBlock = new StaticInventoryKeyDownOnceBlock();\r\nlet keyLeftOnceBlock = new StaticInventoryKeyLeftOnceBlock();\r\nlet keyRightOnceBlock = new StaticInventoryKeyRightOnceBlock();\r\n\r\nlet moveUpBlock = new StaticInventoryStepUPBlock();\r\nlet moveDownBlock = new StaticInventoryStepDownBlock();\r\nlet moveLeftBlock = new StaticInventoryStepLeftBlock();\r\nlet moveRightBlock = new StaticInventoryStepRightBlock();\r\n\r\n"]}