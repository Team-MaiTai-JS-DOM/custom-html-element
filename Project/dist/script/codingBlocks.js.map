{"version":3,"sources":["../../script/codingBlocks.js"],"names":["Sprite","img","width","height","stepAmount","x","canvasWidth","y","canvasHeight","alreadyLoaded","style","image","addEventListener","ctx2D","drawImage","newX","newY","redraw","radians","clearRect","module","exports"],"mappings":";;;;;;AAAA;;;IAIMA,M;AACF,oBAAYC,GAAZ,EAAiBC,KAAjB,EAAwBC,MAAxB,EAA+B;AAAA;;AAC3B,aAAKF,GAAL,GAAWA,GAAX;AACA,aAAKC,KAAL,GAAaA,KAAb;AACA,aAAKC,MAAL,GAAcA,MAAd;;AAEA,aAAKC,UAAL,GAAkB,CAAlB;;AAEA;AACA,aAAKC,CAAL,GAASC,cAAc,CAAd,GAAkBJ,QAAQ,CAAnC;AACA,aAAKK,CAAL,GAASC,eAAe,CAAf,GAAmBL,SAAS,CAArC;;AAEA;AACA,aAAKM,aAAL,GAAqB,KAArB;;AAEA,aAAKR,GAAL,CAASS,KAAT,CAAeR,KAAf,GAAuBA,QAAQ,IAA/B;AACA,aAAKD,GAAL,CAASS,KAAT,CAAeP,MAAf,GAAwBA,SAAS,IAAjC;;AAEA,YAAIE,IAAI,KAAKA,CAAb;AACA,YAAIE,IAAI,KAAKA,CAAb;AACA,YAAII,QAAQ,KAAKV,GAAjB;;AAEA,aAAKA,GAAL,CAASW,gBAAT,CAA0B,WAA1B,EAAuC,YAAY;AAC/C,gBAAI,CAAC,KAAKH,aAAV,EAAyB;AACrBI,sBAAMC,SAAN,CAAgBH,KAAhB,EAAuBN,CAAvB,EAA0BE,CAA1B,EAA6BL,KAA7B,EAAoCC,MAApC;AACH;;AAED;AACA;AACA;AACH,SARD;AASH;;;;+BAEMY,I,EAAMC,I,EAAM;AACf,iBAAKX,CAAL,GAASU,IAAT;AACA,iBAAKR,CAAL,GAASS,IAAT;AACA,iBAAKC,MAAL;AACH;;;mCAEU;AACP,iBAAKZ,CAAL,IAAU,KAAKD,UAAf;AACA,iBAAKa,MAAL;AACH;;;oCAEW;AACR,iBAAKZ,CAAL,IAAU,KAAKD,UAAf;AACA,iBAAKa,MAAL;AACH;;;iCAEQ;AACL,iBAAKV,CAAL,IAAU,KAAKH,UAAf;AACA,iBAAKa,MAAL;AACH;;;mCAEU;AACP,iBAAKV,CAAL,IAAU,KAAKH,UAAf;AACA,iBAAKa,MAAL;AACH;;;kCAESC,O,EAAS;AACf,iBAAKb,CAAL,GAASU,IAAT;AACA,iBAAKR,CAAL,GAASS,IAAT;AACA,iBAAKC,MAAL;AACH;;;iCAEQ;AACLJ,kBAAMM,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,EAAsBb,WAAtB,EAAmCE,YAAnC;AACAK,kBAAMC,SAAN,CAAgB,KAAKb,GAArB,EAA0B,KAAKI,CAA/B,EAAkC,KAAKE,CAAvC,EAA0C,KAAKL,KAA/C,EAAsD,KAAKC,MAA3D;AACH;;;;;;AAGL,IAAI,OAAOiB,MAAP,KAAkB,WAAtB,EAAmC;AAC/BA,WAAOC,OAAP,GAAkB,YAAU;AACxB,eAAOrB,MAAP;AACH,KAFgB,EAAjB;AAGH","file":"codingBlocks.js","sourcesContent":["//               ONLY FOR TESTING PURPOSES\r\n\r\n\r\n\r\nclass Sprite {\r\n    constructor(img, width, height){\r\n        this.img = img;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        this.stepAmount = 2;\r\n\r\n        // where to appear initially inside the canvas\r\n        this.x = canvasWidth / 2 - width / 2;\r\n        this.y = canvasHeight / 2 - height / 2;\r\n\r\n        // loaded to canvas\r\n        this.alreadyLoaded = false;\r\n\r\n        this.img.style.width = width + 'px';\r\n        this.img.style.height = height + 'px';\r\n\r\n        let x = this.x;\r\n        let y = this.y;\r\n        let image = this.img;\r\n\r\n        this.img.addEventListener('mousedown', function () {\r\n            if (!this.alreadyLoaded) {\r\n                ctx2D.drawImage(image, x, y, width, height);\r\n            }\r\n\r\n            // add reference to inventory\r\n            // let reference = new staticShape(svg, loopsColor, true, false, [], false, false);\r\n            // document.getElementById('SamuilsTableId').addChild(reference.svg);\r\n        });\r\n    };\r\n\r\n    moveTo(newX, newY) {\r\n        this.x = newX;\r\n        this.y = newY;\r\n        this.redraw();\r\n    }\r\n\r\n    stepLeft() {\r\n        this.x -= this.stepAmount;\r\n        this.redraw();\r\n    }\r\n\r\n    stepRight() {\r\n        this.x += this.stepAmount;\r\n        this.redraw();\r\n    }\r\n\r\n    stepUp() {\r\n        this.y -= this.stepAmount;\r\n        this.redraw();\r\n    }\r\n\r\n    stepDown() {\r\n        this.y += this.stepAmount;\r\n        this.redraw();\r\n    }\r\n\r\n    turnRigth(radians) {\r\n        this.x = newX;\r\n        this.y = newY;\r\n        this.redraw();\r\n    }\r\n\r\n    redraw() {\r\n        ctx2D.clearRect(0, 0, canvasWidth, canvasHeight);\r\n        ctx2D.drawImage(this.img, this.x, this.y, this.width, this.height);\r\n    }\r\n}\r\n\r\nif (typeof module !== 'undefined') {\r\n    module.exports = (function(){\r\n        return Sprite;\r\n    })();\r\n}\r\n"]}